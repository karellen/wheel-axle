name: wheel-axle
on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master
jobs:
  build-primary:
    runs-on: ${{ matrix.os }}
    continue-on-error: false
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macos-13
        python-version:
          - '3.12'
          - '3.11'
          - '3.10'
        pip-version:
          - '24.2'
          - '24.1'
          - '24.0'
          - '23.3'
          - '22.3'
        setuptools-version:
          - '72.1'
          - '71.1'
          - '70.3'
          - '69.5'
          - '68.2'
          - '67.8'
          - '66.1'
          - '65.7'
        exclude:
          - python-version: '3.12'
            setuptools-version: '65.7'
          - python-version: '3.12'
            pip-version: '22.3'
    env:
      DEPLOY_PYTHONS: "3.12"
      DEPLOY_OSES: "Linux"
      DEPLOY_PIPS: "24.2"
      DEPLOY_SETUPTOOLS: "72.1"
      TWINE_USERNAME: __token__
      TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v4
      - shell: bash
        run: |
          echo "PYB_EXTRA_ARGS=--no-venvs" >> $GITHUB_ENV
          echo "SETUPTOOLS_VER=~=${{matrix.setuptools-version}}" >> $GITHUB_ENV
          echo "PIP_VER=~=${{matrix.pip-version}}" >> $GITHUB_ENV

      - shell: bash
        if: |
          github.event_name == 'push' &&
          contains(env.DEPLOY_OSES, runner.os) &&
          contains(env.DEPLOY_PYTHONS, matrix.python-version) &&
          contains(env.DEPLOY_PIPS, matrix.pip-version) &&
          contains(env.DEPLOY_SETUPTOOLS, matrix.setuptools-version)
        run: |
          echo "PYB_EXTRA_ARGS=+upload --no-venvs" >> $GITHUB_ENV

      - uses: pybuilder/build@master
        with:
          checkout: false
          with-venv: false
          python-version: ${{ matrix.python-version }}
          pyb-extra-args: ${{ env.PYB_EXTRA_ARGS }}
  build-secondary:
    needs: 'build-primary'
    runs-on: ${{ matrix.os }}
    continue-on-error: false
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macos-13
        python-version:
          - '3.9'
          - '3.8'
        pip-version:
          - '24.2'
          - '24.1'
          - '24.0'
          - '23.3'
          - '22.3'
        setuptools-version:
          - '72.1'
          - '71.1'
          - '70.3'
          - '69.5'
          - '68.2'
          - '67.8'
          - '66.1'
          - '65.7'
          - '64.0'
          - '63.4'
          - '62.6'
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v4
      - shell: bash
        run: |
          echo "PYB_EXTRA_ARGS=--no-venvs" >> $GITHUB_ENV
          echo "SETUPTOOLS_VER=~=${{matrix.setuptools-version}}" >> $GITHUB_ENV
          echo "PIP_VER=~=${{matrix.pip-version}}" >> $GITHUB_ENV

      - uses: pybuilder/build@master
        with:
          checkout: false
          with-venv: false
          python-version: ${{ matrix.python-version }}
          pyb-extra-args: ${{ env.PYB_EXTRA_ARGS }}
  build-experimental:
    needs: 'build-primary'
    runs-on: ${{ matrix.os }}
    continue-on-error: true
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macos-13
        python-version:
          - '3.13-dev'
        pip-version:
          - '24.2'
        setuptools-version:
          - '72.1'
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v4
      - shell: bash
        run: |
          echo "PYB_EXTRA_ARGS=--no-venvs" >> $GITHUB_ENV
          echo "SETUPTOOLS_VER=~=${{matrix.setuptools-version}}" >> $GITHUB_ENV
          echo "PIP_VER=~=${{matrix.pip-version}}" >> $GITHUB_ENV

      - uses: pybuilder/build@master
        with:
          checkout: false
          with-venv: false
          python-version: ${{ matrix.python-version }}
          pyb-extra-args: ${{ env.PYB_EXTRA_ARGS }}
  build-summary:
    if: success() || failure()
    runs-on: ubuntu-latest
    name: Build Summary
    needs:
      - build-primary
      - build-secondary
      - build-experimental
    steps:
      - name: Check build matrix status
        if: |
          needs.build-primary.result != 'success' ||
          needs.build-secondary.result != 'success'
        run: exit 1
